<!doctype html>
<html lang="en">	
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width">
    <title>CookStream</title>
    <script type="text/javascript" src="js/sheetrock.min.js"></script>
    <link rel="stylesheet" href="js/bootstrap.min.css">
	<script type="text/javascript" src="js/Chart.js"></script>
	 <script type="text/javascript" src="js/Chart.PieceLabel.min.js"></script>
    <style>
        table td:not(:first-child) {
            text-align: center;
            min-width: 150px;
        }

        table th {
            text-align: center;
        }

        table {
            margin-top: 25px;
        }
		
		.canvas_wrapper {
			width : 300px;
			height : 300px;
			display: inline-block;
		}
		.canvas_wrapper_container{
			width: 50%;
			margin: 0 auto;
		}
		
    </style>
    <script type="text/javascript">
        var spreadsheet = "https://docs.google.com/spreadsheets/d/1qNNfNY7Wdgkys6RJS8-M2E9FfGl0kzyO8TvvRAMG1VQ/edit#gid=0";
		
		$(document).ready(function() {
            $('#classes').sheetrock({
                url: spreadsheet,
                query: "select A, B, C, D, E, F, G where A is not null",
                labels: ['Tasks', 'PHP Min', 'PHP Max', 'iOS Min', 'iOS Max', 'Android Min', 'Android Max'],
                callback: function(a, b, c) {
					console.log(a, b, c);
					
				/* var ctx = document.getElementById("myChart").getContext('2d');
				var ctx2 = document.getElementById("myChart2").getContext('2d');
				ctx.canvas.width = 300;
				ctx.canvas.height = 300;
				ctx2.canvas.width = 300;
				ctx2.canvas.height = 300; 
				
				var timeout = setTimeout(function(){
				
					var data = {
						fe : c.rows[0]['labels'].indexOf('Front-end'),	
						be : c.rows[0]['labels'].indexOf('Back-end')
					};
					
					var fe = c.rows.map(function(i, j, arr) {
						if(j !== 0 && j < arr.length -2 && i['cellsArray'][data.fe]) {
							return i['cellsArray'][data.fe];
						 }else {
						   return 0;
						 }
					});
					var fe_num_of_tasks = fe.filter(function(val, index, arr){
							return val > 0 && index < arr.length-2;
						}).length;
					
					fe = fe.reduce(function(sum, val, index, arr){
							return sum + parseFloat(val);
					}, 0);
					
					var be = c.rows.map(function(i, j, arr) {
						if(j !== 0 && j < arr.length -2 && i['cellsArray'][data.be]) {
							return i['cellsArray'][data.be];
						 }else {
						   return 0;
						 }
					});
					
					var be_num_of_tasks = be.filter(function(val, index, arr){
							return val > 0 && index < arr.length-2;
						}).length;
					
					be = be.reduce(function(sum, val) {
						return sum + parseFloat(val);
					}, 0)
					
                    var myChart = new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: ["Front-end", "Back-end"],
                            datasets: [{
                                label: ['# of Hours'],
                                data: [fe, be],
                                backgroundColor: [
                                    'rgba(75, 192, 192, 0.2)',
									 'rgba(255, 206, 86, 1)'
                                ],
                                borderColor: [
                                    'rgba(75, 192, 192, 1)',
									 'rgba(255, 206, 86, 1)'
                                ],
                                borderWidth: 1
                            }]
                        },
                        options: {
							responsive: true,
							maintainAspectRatio: true,
                            scales: {
                                yAxes: [{
                                    ticks: {
                                        beginAtZero: true
                                    }
                                }]
                            }, 
							animation: {
								animateScale: true,
								animateRotate: true
							}
                        }
                    });
					
					var myChart2 = new Chart(ctx2, {
                        type: 'pie',
                        data: {
                            labels: ["Front-end", "Back-end"],
                            datasets: [{
                                label: '# of Tasks',
                                data: [be_num_of_tasks, fe_num_of_tasks],
                                backgroundColor: [
                                    'rgba(75, 192, 192, 0.2)',
									 'rgba(255, 206, 86, 1)'
                                ],
                                borderColor: [
                                    'rgba(75, 192, 192, 1)',
									 'rgba(255, 206, 86, 1)'
                                ],
                                borderWidth: 1
                            }]
                        },
                        options: {
							responsive: true,
							maintainAspectRatio: true,
							animation: {
								animateScale: true,
								animateRotate: true
							}, 
							pieceLabel: {
							mode: 'percentage',
							precision: 1,
							fontColor: '#000000', 
							arc: false
						  }
                        }
                    });
					
					}, 1000); */
				}
            });
        });
    </script>
</head>
<body>
	<!-- <div class="canvas_wrapper_container">
	<div class="canvas_wrapper">
		<canvas id="myChart"></canvas>
	</div>
	<div class="canvas_wrapper">
		<canvas id="myChart2"></canvas>
	</div>
	</div> -->
	
    <table id="classes" class="table-responsive table-bordered table-striped"></table>
</body>

</html>